[
    {
        "title": "Eletric Go",
        "imageSrc": "eletric_go_1.webp",
        "description": "Optimization of delivery routes using electric trucks for warehouse distribution, offering RESTful services, a user-friendly interface, and a 3D visualization of the network. <br>The route planning was done with genetic algorithms while adhering to charging rules.",
        "tags": [
            "Angular",
            "Node.js",
            "MongoDB",
            "three.js",
            ".NET Core",
            "Genetic Algorithm"
        ],
        "specificWords": [
            "Optimization",
            "RESTful",
            "3D",
            "genetic algorithms"
        ]
    },
    {
        "title": "Slippage Saver",
        "imageSrc": "slippage_saver_1.webp",
        "description": "Development of two expert systems to aid financial auditors in identifying financial irregularities by analyzing annual company financial data.<br> One system is built in Prolog, and the other in Java using Drools. Both of these expert systems are available in an Angular user-friendly interface.",
        "tags": [
            "Angular",
            "Prolog",
            "Java",
            "Drools"
        ],
        "specificWords": [
            "expert systems",
            "Prolog",
            "Drools",
            "aid",
            "identifying financial irregularities",
            "Angular"
        ]
    },
    {
        "title": "SchedulExp",
        "imageSrc": "schedulexp_1.webp",
        "description": "Classification of fraudulent insurance claims on car accidents and scheduling of insurance experts to the accident location for a claims expertise.<br> The classifcation of the claims was done using scikit-learn a Machine Learning library for Python, and the allocation of experts using a genetic algorithm.",
        "tags": [
            "Angular",
            "Python",
            "Machine Learning",
            "Genetic Algorithm"
        ],
        "specificWords": [
            "Classification",
            "fraudulent insurance claims",
            "scheduling",
            "insurance experts",
            "scikit-learn",
            "Machine Learning",
            "Python",
            "genetic algorithm"
        ]
    },
    {
        "title": "Morny",
        "imageSrc": "morny_1.webp",
        "description": "Chatbot tailored for investment advice in stocks and ETFs, incorporating forecasting of financial products and sentiment analysis of news articles for recommendations.<br> Both forecasting and sentiment analysis utilize Neural Networks implemented with Tensorflow.",
        "tags": [
            "React Native",
            "Expo",
            "Python",
            "Deep Learning",
            "NLP"
        ],
        "specificWords": [
            "Chatbot",
            "investment advice",
            "forecasting",
            "sentiment analysis",
            "Neural Networks",
            "Tensorflow"
        ]
    },
    {
        "title": "AuctionVerse",
        "imageSrc": "auctionverse_1.webp",
        "description": "An auction simulation developed using Multi-Agent Systems in a simulated environment developed with Gazebo and ROS.<br> In the simulation, there is a robot that helps guiding people to the seats in the auction room.",
        "tags": [
            "Python",
            "Multi-Agent Systems",
            "ROS",
            "Gazebo"
        ],
        "specificWords": [
            "Gazebo",
            "ROS",
            "Multi-Agent Systems",
            "auction simulation",
            "robot",
            "helps guiding people",
            "seats"
        ]
    }
]